stages:
  - build
  - test
  - release
  - deploy

build-job:
  tags:
    - vm-shell
  stage: build
  script:
    - echo "creating virtual environment for the project..."
    - virtualenv $(pwd)/venv
    - source $(pwd)/venv/bin/activate
    - echo "Installing requirements..."
    - pip install -r base.txt
    - pip install -r local.txt
    - pip install -r production.txt
    - deactivate
  artifacts:
    paths:
      - $(pwd)/venv

test-job:
  tags:
    - vm-shell
  stage: test
  script:
    - echo "Activating virtual environment..."
    - source $(pwd)/venv/bin/activate
    - echo "Running unit tests..."
    - python manage.py test budget
    - echo "Checking the server..."
    - python manage.py runserver &
    - sleep 10
    - curl -sSf http://localhost:8000 > /dev/null && echo "Server is Up"
    - sudo pkill python
    - deactivate
    - echo "All tests successfully passed."

variables:
  CONTAINER_IMAGE: $CI_REGISTRY_IMAGE:$CI_PIPELINE_IID

release-job:
  tags:
    - vm-shell
  stage: release
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build -t $CONTAINER_IMAGE .
    - docker push $CONTAINER_IMAGE
  after_script:
    - docker logout

# Deploy petclinic
deploy-job:
  tags:
    - docker
  stage: deploy

  script:
    - echo "Logging in to Docker Hub"
    - docker login -u walidmbarek -p walid123$
    - echo "Building Docker image"
    - docker build -t walidmbarek/djangobackend .
    - echo "Pushing Docker image to Docker Hub"
    - docker push walidmbarek/djangobackend
