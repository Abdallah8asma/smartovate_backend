# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

image: docker:20.10.17

services:
  - docker:20.10.17-dind




stages:
  - test
  - build
  #- deploy

unit_test:
  stage: test
  tags:
   - docker
  script:
    - echo "Starting unit test"
    # Add your unit testing commands here
    - echo "Test cases completed"



dev_build_image:
  stage: build
  tags:
   - docker
  script:
    - echo "CI_REGISTRY_USER: $CI_REGISTRY_USER"
    - echo "CI_REGISTRY_PASSWORD: $CI_REGISTRY_PASSWORD"
    - echo "CI_REGISTRY: $CI_REGISTRY"
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin "$CI_REGISTRY"
    - docker build -t registry.gitlab.com/smartovate/smartovate-backend .
    - docker push registry.gitlab.com/smartovate/smartovate-backend


